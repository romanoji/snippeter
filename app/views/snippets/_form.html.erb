<%= form_for(@snippet, :html => { :class => "form-horizontal" }) do |f| %>
  <% if @snippet.errors.any? %>
    <div class="alert alert-danger alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <h4><%= pluralize(@snippet.errors.count, "error") %> prohibited this snippet from being saved:</h4>

      <ul>
      <% @snippet.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.label :snippet, :class => "col-sm-2 control-label" %>
    <div class="col-sm-10">
      <%= f.text_area :snippet, :class => "form-control", :style => "height: 200px" %>
    </div>
  </div>
  <div id="section-lang" class="form-group">
    <%= f.label :lang_id, :class => "col-sm-2 control-label" %>
    <div class="col-sm-10">
      <%= f.collection_select :lang_id, Lang.order(:order_type, :name), :id, :name,
                              { :selected => @snippet.lang_id, :prompt => "-- Select language --" },
                              { :class => "form-control form-control-lang" } %>
    </div>
  </div>
  <div class="form-group">
    <%= f.label :description, :class => "col-sm-2 control-label" %>
    <div class="col-sm-10">
      <%= f.text_field :description, :class => "form-control" %>
    </div>
  </div>
  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <%= f.button :submit, :class => "btn btn-primary" do %>
          <span class="glyphicon glyphicon-ok"></span>
          <%= @submit_button_text %>
      <% end %>
    </div>
  </div>
<% end %>

<%= javascript_tag do %>
    $(document).ready(function() {
        // Enable Select2 on 'lang' combobox
        $("#section-lang").find("#snippet_lang_id").select2();
    });

    HTMLTextAreaElement.prototype.getCaretPosition = function () { //return the caret position of the textarea
        return this.selectionStart;
    };
    HTMLTextAreaElement.prototype.setCaretPosition = function (position) { //change the caret position of the textarea
        this.selectionStart = position;
        this.selectionEnd = position;
        this.focus();
    };
    HTMLTextAreaElement.prototype.hasSelection = function () { //if the textarea has selection then return true
        if (this.selectionStart == this.selectionEnd) {
            return false;
        } else {
            return true;
        }
    };
    HTMLTextAreaElement.prototype.getSelectedText = function () { //return the selection text
        return this.value.substring(this.selectionStart, this.selectionEnd);
    };
    HTMLTextAreaElement.prototype.setSelection = function (start, end) { //change the selection area of the textarea
        this.selectionStart = start;
        this.selectionEnd = end;
        this.focus();
    };

    var textarea = document.getElementsByTagName('textarea')[0];

    textarea.onkeydown = function(event) {

        // catching tab_key on textarea
        if (event.keyCode == 9) { // tab_key pressed
            var newCaretPosition;
            newCaretPosition = textarea.getCaretPosition() + "	".length; // '	'
            textarea.value = textarea.value.substring(0, textarea.getCaretPosition()) + "	" + textarea.value.substring(textarea.getCaretPosition(), textarea.value.length);
            textarea.setCaretPosition(newCaretPosition);
            return false;
        }
    }
<% end %>

